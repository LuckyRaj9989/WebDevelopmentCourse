Arrays:  ----> It is denoted with [] and stores the values with the index from 0 onwards.
    var data = [10,20,30,40,50];
    console.log(data); ---> // [10,20,30,40,50]
    //to get particular value:
    var num1 = data[0]; ---> returns the first value in array is 10
    var num4 = data[4]; ---> returns the fourth value in array is 50

    //to get length of array:
    var data = [10,20,30,40,50];
    data.length ---> returns the number of elements in array.

    // methods to create a array:
    1) var data = [10,20,30,40,50];
    2) var data1 = new Array(10,20,30,40,50);
    3) var data3 = new Array();
        data3[0] = 10;
        data3[1] = 20;
        console.log(data3); ---> returns the value as [10,20]

    //Modify and delete the values in array:
    var data = [20,"Raj",50];
    data[1] = 35;
    console.log(data); ---> returns the array as [20,35,50]
    var data1 = [20,"Raj",50];
    delete data1[1];
    console.log(data1); ---> returns the array as [20,,50];
    here the value of index deleted, but not entire with index. So the value of that index will be either null or undefined.
    console.log(data[1]);

    //sort & reverse
    var data = ["Sunny","Raj","Lucky"];
    data.sort(); ---> returns the array as ["Lucky","Raj","Sunny"]
    data.reverse(); ---> returns the array as ["Sunny","Raj","Lucky"]

    //pop & push
    var data = ["Sunny","Raj","Lucky"];
    data.pop(); ----> deletes the last value of array along with index.
    data.push("Sundar"); ---> It will add the new value in to array in last index.

    //shift & unshift
    var data = ["Sunny","Raj","Lucky"];
    data.shift(); ---> removes the first value of array along with index
    data.unshift("Sundar"); ---> Adds the value into array in first index.

    //concat && join
    var dat1 = ["Lucky","Raj"];
    var dat2 = dat1.concat("Sundar","Sunny");
    console.log(dat2); ---> returns the array as ["Lucky","Raj","Sundar","Sunny"]
    var dat3 = ["Sundar","Sunny"];
    var result = dat1.concat(dat3); ---> returns the array as ["Lucky","Raj","Sundar","Sunny"]
    var join_data = ["Lucky","Raj"];
    var resu_data = join_data.join("/"); ---> returns the string value as "Lucky/Raj"

    //slice && splice
    var x = ["Lucky","Raj","Sundar","Sunny"];
    var y = x.slice(1,3); ---> returns a new array with reference of old array from index of 1 to 3
    console.log(y); ----> returns an array as ["Raj","Sundar"];
    x.splice(2,0,"Sneha"); ----> 2--->after 2nd index, 0--->0 values after 2nd index to delete, "Sneha" value to be added before 2nd index
    console.log(z); ---> returns an array for an existing array as ["Lucky","Raj","Sneha","Sundar","Sunny"]

    //isArray
    var Data = ["Lucky","Raj","Sundar","Sunny"];
    Array.isArray(Data); ---> returns the boolean as true/false

    //indexOf && lastIndexOf
    var ind = ["Lucky","Raj","Sundar","Raj","Sunny"];
    var no_Item = ind.indexOf("Neha"); ---> Returns value as -1 because of no value in array.
    ind.indexOf("Raj"); ---> Returns the index value of first search item.
    console.log(ind.indexOf("Raj")); ---> returns value as 1 
    ind.indexOf("Raj",2); ---> Returns the index value of search item after 2nd index.
    console.log(ind.indexOf("Raj",2)); ---> Returns values as 3
    ind.lastIndexOf("Raj"); ---> Returns the last index value of search item.
    console.log(ind.lastIndexOf("Raj")); ---> Returns value as 3

    //includes
    var ind = ["Lucky","Raj","Sundar","Sunny"];
    var result = ind.includes("Sundar"); ---> Returns the boolean value as true if value found in array.

    //some && every
    var ages = [10,15,20,25,30];
    var isEvery = ages.every(ele =>{
        return ele >= 15;
    });
    console.log(isEvery); ---> returns the value as false because one value(10) in array is less than 15

    var isSome = ages.some(ele =>{
        retrun ele >= 15;
    });
    console.log(isSome); ---> Returns the value as true because atleast one value in array is satisfying the condition.

    //find && findIndex
    var x = [10,20,30,40,50];
        var isFind = x.find(ele =>{
            return ele>=18;
        });
        console.log(isFind); ---> returns the value which satisfied the first value in array.
        var isFindIndex = x.findIndex(ele =>{
            return ele>=18;
        });
        console.log(isFindIndex); ---> returns the index of value which satisfied the first value in array.

    //filter
    var x = [10,20,30,40,50];
    var isFilter = x.filter(ele =>{
        return ele>=25;
    });
    console.log(isFilter); ---> returns the array as [30,40,50] which satisfied the condition.
    
    //toString && valueOf && fill
    var x = [10,20,30,40,50];
    var isToString = x.toString();
    console.log(isToString); ---> returns the value as string which cannot modify back to array.
    var isFill = x.fill(25);
    console.log(isFill); ---> returns the array with a new value in all indexes in array.
    
    //forEach
    var x = [10,20,30,40,50];
        x.forEach((ele,ind) =>{
            document.write(ind+" : "+ele+" <br/>");
        });
    ---> iterates each element and print the value along with index.

